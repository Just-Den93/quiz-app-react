{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\nexport const SET_SELECTED_MODE = 'SET_SELECTED_MODE';\nexport const SET_QUIZ_STATE = 'SET_QUIZ_STATE';\nexport const MARK_BLOCK_AS_USED = 'MARK_BLOCK_AS_USED';\nexport const SET_SHOW_QUIZ_PAGE = 'SET_SHOW_QUIZ_PAGE';\nexport const setSelectedMode = mode => ({\n  type: SET_SELECTED_MODE,\n  payload: mode\n});\nexport const setQuizState = (mode, state) => ({\n  type: SET_QUIZ_STATE,\n  payload: {\n    mode,\n    state\n  }\n});\nexport const markBlockAsUsed = (mode, categoryName, blockId) => ({\n  type: MARK_BLOCK_AS_USED,\n  payload: {\n    mode,\n    categoryName,\n    blockId\n  }\n});\n\n// Thunk for fetching quiz data\nexport const fetchQuizData = createAsyncThunk('quiz/fetchQuizData', async (mode, {\n  rejectWithValue\n}) => {\n  try {\n    const data = await loadJsonDataByMode(mode);\n    return {\n      mode,\n      data\n    };\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","loadJsonDataByMode","SET_SELECTED_MODE","SET_QUIZ_STATE","MARK_BLOCK_AS_USED","SET_SHOW_QUIZ_PAGE","setSelectedMode","mode","type","payload","setQuizState","state","markBlockAsUsed","categoryName","blockId","fetchQuizData","rejectWithValue","data","error","message"],"sources":["E:/quiz-app-react/src/store/actions.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { loadJsonDataByMode } from '../utils/loadJsonData';\r\n\r\nexport const SET_SELECTED_MODE = 'SET_SELECTED_MODE';\r\nexport const SET_QUIZ_STATE = 'SET_QUIZ_STATE';\r\nexport const MARK_BLOCK_AS_USED = 'MARK_BLOCK_AS_USED';\r\nexport const SET_SHOW_QUIZ_PAGE = 'SET_SHOW_QUIZ_PAGE';\r\n\r\nexport const setSelectedMode = (mode) => ({\r\n  type: SET_SELECTED_MODE,\r\n  payload: mode,\r\n});\r\n\r\nexport const setQuizState = (mode, state) => ({\r\n  type: SET_QUIZ_STATE,\r\n  payload: { mode, state },\r\n});\r\n\r\nexport const markBlockAsUsed = (mode, categoryName, blockId) => ({\r\n  type: MARK_BLOCK_AS_USED,\r\n  payload: { mode, categoryName, blockId },\r\n});\r\n\r\n// Thunk for fetching quiz data\r\nexport const fetchQuizData = createAsyncThunk(\r\n  'quiz/fetchQuizData',\r\n  async (mode, { rejectWithValue }) => {\r\n    try {\r\n      const data = await loadJsonDataByMode(mode);\r\n      return { mode, data };\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,kBAAkB,QAAQ,uBAAuB;AAE1D,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,cAAc,GAAG,gBAAgB;AAC9C,OAAO,MAAMC,kBAAkB,GAAG,oBAAoB;AACtD,OAAO,MAAMC,kBAAkB,GAAG,oBAAoB;AAEtD,OAAO,MAAMC,eAAe,GAAIC,IAAI,KAAM;EACxCC,IAAI,EAAEN,iBAAiB;EACvBO,OAAO,EAAEF;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,YAAY,GAAGA,CAACH,IAAI,EAAEI,KAAK,MAAM;EAC5CH,IAAI,EAAEL,cAAc;EACpBM,OAAO,EAAE;IAAEF,IAAI;IAAEI;EAAM;AACzB,CAAC,CAAC;AAEF,OAAO,MAAMC,eAAe,GAAGA,CAACL,IAAI,EAAEM,YAAY,EAAEC,OAAO,MAAM;EAC/DN,IAAI,EAAEJ,kBAAkB;EACxBK,OAAO,EAAE;IAAEF,IAAI;IAAEM,YAAY;IAAEC;EAAQ;AACzC,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,aAAa,GAAGf,gBAAgB,CAC3C,oBAAoB,EACpB,OAAOO,IAAI,EAAE;EAAES;AAAgB,CAAC,KAAK;EACnC,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMhB,kBAAkB,CAACM,IAAI,CAAC;IAC3C,OAAO;MAAEA,IAAI;MAAEU;IAAK,CAAC;EACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOF,eAAe,CAACE,KAAK,CAACC,OAAO,CAAC;EACvC;AACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}